name: Push-to-EC2 instance

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'server/**'
      - '.github/workflows/cd.yml'

jobs:
  deploy:
    name: Push to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: 15.206.212.10
          username: ubuntu
          key: ${{ secrets.SSH_KEY_Metaverse }}
          port: 22
          script: |
            echo "üöÄ Starting deployment..."
            
            # Load environment variables
            source ~/.bashrc || true
            source ~/.profile || true
            
            # Set PATH to include common Node.js locations
            export PATH=$PATH:/usr/bin:/usr/local/bin:~/.nvm/versions/node/*/bin:/opt/node/bin:/home/ubuntu/.nvm/versions/node/v22.16.0/bin
            
            # If nvm is installed, load it
            if [ -f ~/.nvm/nvm.sh ]; then
              source ~/.nvm/nvm.sh
              nvm use node || nvm use default || nvm use v22.16.0 || true
            fi
            
            # Remove old deployment
            sudo rm -rf Metaverse || true
            
            # Clone the repository
            echo "üìÇ Cloning repository..."
            git clone https://github.com/ayushKhandelwal07/Metaverse.git
            ls
            cd Metaverse
            cd server
            
            # Check if npm is available
            echo "üîç Checking Node.js and npm..."
            which node || echo "Node.js not found in PATH"
            which npm || echo "npm not found in PATH"
            node --version || echo "Could not get Node version"
            npm --version || echo "Could not get npm version"
            
            # Install dependencies
            echo "üì¶ Installing dependencies..."
            npm install || /usr/bin/npm install || ~/.nvm/versions/node/*/bin/npm install
            
            # Build the project
            echo "üî® Building project..."
            npm run build || /usr/bin/npm run build || ~/.nvm/versions/node/*/bin/npm run build
            
            # Check if pm2 is available, install if not
            echo "üîç Checking PM2..."
            if ! command -v pm2 &> /dev/null; then
              echo "üì¶ Installing PM2..."
              npm install -g pm2 || sudo npm install -g pm2
            fi
            
            # Stop existing backend process
            echo "üõë Stopping existing backend..."
            pm2 stop colyseus-app || true
            pm2 delete colyseus-app || true
            
            # Start the backend server using ecosystem config
            echo "üöÄ Starting backend server..."
            pm2 start ecosystem.config.js --env production
            pm2 save
            
            echo "‚úÖ Backend deployment completed!"
            pm2 status
            
            # Restart Nginx to ensure proper proxy configuration
            echo "üîÑ Restarting Nginx..."
            sudo systemctl reload nginx || echo "‚ùå Could not reload Nginx"
            
            # DIAGNOSTIC SECTION - Check what's wrong
            echo "üîç === DIAGNOSTIC INFORMATION ==="
            echo "1. Checking if port 2567 is listening:"
            sudo netstat -tlnp | grep 2567 || echo "‚ùå Port 2567 is NOT listening"
            
            echo -e "\n2. Checking PM2 status and logs:"
            pm2 status || echo "‚ùå Could not get PM2 status"
            pm2 logs colyseus-app --lines 20 --nostream || echo "‚ùå Could not get PM2 logs"
            
            echo -e "\n3. Testing health check endpoint:"
            curl -v http://localhost:2567/health || echo "‚ùå Health check failed"
            
            echo -e "\n4. Testing local connection to server:"
            curl -I http://localhost:2567/colyseus || echo "‚ùå Local connection to :2567/colyseus failed"
            
            echo -e "\n5. Testing if server responds on root:"
            curl -I http://localhost:2567/ || echo "‚ùå Local connection to :2567/ failed"
            
            echo -e "\n6. Checking what's listening on all ports:"
            sudo netstat -tlnp | head -20
            
            echo -e "\n7. Checking if UFW firewall is blocking:"
            sudo ufw status || echo "UFW not installed"
            
            echo -e "\n8. Testing external connectivity (from inside EC2):"
            curl -I http://15.206.212.10:2567/health || echo "‚ùå External IP health check failed"
            curl -I http://15.206.212.10:2567/ || echo "‚ùå External IP connection failed"
            
            echo -e "\n9. Checking PM2 process details:"
            pm2 show colyseus-app || echo "‚ùå Could not show PM2 process details"
            
            echo -e "\n10. Checking Nginx status:"
            sudo systemctl status nginx || echo "‚ùå Could not check Nginx status"
            sudo nginx -t || echo "‚ùå Nginx config test failed"
            
            echo "üîç === END DIAGNOSTICS ==="